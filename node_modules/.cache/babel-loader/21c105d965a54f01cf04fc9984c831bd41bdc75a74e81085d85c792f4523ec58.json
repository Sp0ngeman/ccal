{"ast":null,"code":"// serviceWorker.js\n\nconst CACHE_NAME = 'chess-app-cache-v1';\nconst urlsToCache = ['/', '/index.html', '/static/js/bundle.js', '/static/css/main.chunk.css', '/favicon.ico', '/manifest.json'];\nself.addEventListener('install', event => {\n  // Perform install steps\n  event.waitUntil(caches.open(CACHE_NAME).then(cache => {\n    return cache.addAll(urlsToCache);\n  }));\n});\nself.addEventListener('fetch', event => {\n  event.respondWith(caches.match(event.request).then(response => {\n    // Cache hit - return the cached response\n    if (response) {\n      return response;\n    }\n\n    // Clone the request to make a fetch\n    const fetchRequest = event.request.clone();\n    return fetch(fetchRequest).then(response => {\n      // Check if valid response\n      if (!response || response.status !== 200 || response.type !== 'basic') {\n        return response;\n      }\n\n      // Clone the response to store it in the cache\n      const responseToCache = response.clone();\n      caches.open(CACHE_NAME).then(cache => {\n        cache.put(event.request, responseToCache);\n      });\n      return response;\n    });\n  }));\n});\nself.addEventListener('activate', event => {\n  const cacheWhitelist = [CACHE_NAME];\n  event.waitUntil(caches.keys().then(cacheNames => {\n    return Promise.all(cacheNames.map(cacheName => {\n      if (cacheWhitelist.indexOf(cacheName) === -1) {\n        // Delete caches not in whitelist\n        return caches.delete(cacheName);\n      }\n    }));\n  }));\n});","map":{"version":3,"names":["CACHE_NAME","urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","respondWith","match","request","response","fetchRequest","clone","fetch","status","type","responseToCache","put","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","delete"],"sources":["/workspaces/ccal/src/serviceWorker.js"],"sourcesContent":["// serviceWorker.js\n\nconst CACHE_NAME = 'chess-app-cache-v1';\nconst urlsToCache = [\n  '/',\n  '/index.html',\n  '/static/js/bundle.js',\n  '/static/css/main.chunk.css',\n  '/favicon.ico',\n  '/manifest.json',\n];\n\nself.addEventListener('install', (event) => {\n  // Perform install steps\n  event.waitUntil(\n    caches.open(CACHE_NAME)\n      .then((cache) => {\n        return cache.addAll(urlsToCache);\n      })\n  );\n});\n\nself.addEventListener('fetch', (event) => {\n  event.respondWith(\n    caches.match(event.request)\n      .then((response) => {\n        // Cache hit - return the cached response\n        if (response) {\n          return response;\n        }\n\n        // Clone the request to make a fetch\n        const fetchRequest = event.request.clone();\n\n        return fetch(fetchRequest).then(\n          (response) => {\n            // Check if valid response\n            if (!response || response.status !== 200 || response.type !== 'basic') {\n              return response;\n            }\n\n            // Clone the response to store it in the cache\n            const responseToCache = response.clone();\n\n            caches.open(CACHE_NAME)\n              .then((cache) => {\n                cache.put(event.request, responseToCache);\n              });\n\n            return response;\n          }\n        );\n      })\n  );\n});\n\nself.addEventListener('activate', (event) => {\n  const cacheWhitelist = [CACHE_NAME];\n\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cacheName) => {\n          if (cacheWhitelist.indexOf(cacheName) === -1) {\n            // Delete caches not in whitelist\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n});\n"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAG,oBAAoB;AACvC,MAAMC,WAAW,GAAG,CAClB,GAAG,EACH,aAAa,EACb,sBAAsB,EACtB,4BAA4B,EAC5B,cAAc,EACd,gBAAgB,CACjB;AAEDC,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;EAC1C;EACAA,KAAK,CAACC,SAAS,CACbC,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CACpBQ,IAAI,CAAEC,KAAK,IAAK;IACf,OAAOA,KAAK,CAACC,MAAM,CAACT,WAAW,CAAC;EAClC,CAAC,CACL,CAAC;AACH,CAAC,CAAC;AAEFC,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;EACxCA,KAAK,CAACO,WAAW,CACfL,MAAM,CAACM,KAAK,CAACR,KAAK,CAACS,OAAO,CAAC,CACxBL,IAAI,CAAEM,QAAQ,IAAK;IAClB;IACA,IAAIA,QAAQ,EAAE;MACZ,OAAOA,QAAQ;IACjB;;IAEA;IACA,MAAMC,YAAY,GAAGX,KAAK,CAACS,OAAO,CAACG,KAAK,CAAC,CAAC;IAE1C,OAAOC,KAAK,CAACF,YAAY,CAAC,CAACP,IAAI,CAC5BM,QAAQ,IAAK;MACZ;MACA,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACI,MAAM,KAAK,GAAG,IAAIJ,QAAQ,CAACK,IAAI,KAAK,OAAO,EAAE;QACrE,OAAOL,QAAQ;MACjB;;MAEA;MACA,MAAMM,eAAe,GAAGN,QAAQ,CAACE,KAAK,CAAC,CAAC;MAExCV,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CACpBQ,IAAI,CAAEC,KAAK,IAAK;QACfA,KAAK,CAACY,GAAG,CAACjB,KAAK,CAACS,OAAO,EAAEO,eAAe,CAAC;MAC3C,CAAC,CAAC;MAEJ,OAAON,QAAQ;IACjB,CACF,CAAC;EACH,CAAC,CACL,CAAC;AACH,CAAC,CAAC;AAEFZ,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAGC,KAAK,IAAK;EAC3C,MAAMkB,cAAc,GAAG,CAACtB,UAAU,CAAC;EAEnCI,KAAK,CAACC,SAAS,CACbC,MAAM,CAACiB,IAAI,CAAC,CAAC,CAACf,IAAI,CAAEgB,UAAU,IAAK;IACjC,OAAOC,OAAO,CAACC,GAAG,CAChBF,UAAU,CAACG,GAAG,CAAEC,SAAS,IAAK;MAC5B,IAAIN,cAAc,CAACO,OAAO,CAACD,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5C;QACA,OAAOtB,MAAM,CAACwB,MAAM,CAACF,SAAS,CAAC;MACjC;IACF,CAAC,CACH,CAAC;EACH,CAAC,CACH,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}