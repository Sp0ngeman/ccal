{"ast":null,"code":"var _jsxFileName = \"/workspaces/ccal/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Chessboard from './/Chessboard';\nimport MoveInput from './/MoveInput';\nimport BestMoveDisplay from '.BestMoveDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bestMove, setBestMove] = useState('');\n  const [game, setGame] = useState({\n    // Initial game state\n    // ...\n  });\n  const handleMoveSubmit = move => {\n    // Logic to handle user move submission and update game state\n    // ...\n\n    // Example: Set the best move (this should be calculated based on the game state)\n    setBestMove('e4');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${game.isGameOver ? 'dark-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      game: game\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoveInput, {\n      onMoveSubmit: handleMoveSubmit,\n      disabled: game.isGameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BestMoveDisplay, {\n      bestMove: bestMove,\n      onCalculateBestMove: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1KL7keZnAyQnb9B05oJYZF4baMg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Chessboard","MoveInput","BestMoveDisplay","jsxDEV","_jsxDEV","App","_s","bestMove","setBestMove","game","setGame","handleMoveSubmit","move","className","isGameOver","children","fileName","_jsxFileName","lineNumber","columnNumber","onMoveSubmit","disabled","onCalculateBestMove","_c","$RefreshReg$"],"sources":["/workspaces/ccal/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Chessboard from './/Chessboard';\nimport MoveInput from './/MoveInput';\nimport BestMoveDisplay from '.BestMoveDisplay';\n\nconst App = () => {\n  const [bestMove, setBestMove] = useState('');\n  const [game, setGame] = useState({\n    // Initial game state\n    // ...\n  });\n\n  const handleMoveSubmit = (move) => {\n    // Logic to handle user move submission and update game state\n    // ...\n\n    // Example: Set the best move (this should be calculated based on the game state)\n    setBestMove('e4');\n  };\n\n  return (\n    <div className={`app-container ${game.isGameOver ? 'dark-mode' : ''}`}>\n      <h1>Chess Game</h1>\n      <Chessboard game={game} />\n      <MoveInput onMoveSubmit={handleMoveSubmit} disabled={game.isGameOver} />\n      <BestMoveDisplay bestMove={bestMove} onCalculateBestMove={() => {}} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,eAAe,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC/B;IACA;EAAA,CACD,CAAC;EAEF,MAAMY,gBAAgB,GAAIC,IAAI,IAAK;IACjC;IACA;;IAEA;IACAJ,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEJ,OAAA;IAAKS,SAAS,EAAG,iBAAgBJ,IAAI,CAACK,UAAU,GAAG,WAAW,GAAG,EAAG,EAAE;IAAAC,QAAA,gBACpEX,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBf,OAAA,CAACJ,UAAU;MAACS,IAAI,EAAEA;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1Bf,OAAA,CAACH,SAAS;MAACmB,YAAY,EAAET,gBAAiB;MAACU,QAAQ,EAAEZ,IAAI,CAACK;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxEf,OAAA,CAACF,eAAe;MAACK,QAAQ,EAAEA,QAAS;MAACe,mBAAmB,EAAEA,CAAA,KAAM,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;AAACb,EAAA,CAvBID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}